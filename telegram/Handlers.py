import time

from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher, FSMContext
from aiogram.dispatcher.filters import Text, Command

import pyautogui

import Config
import Methods
import telegram.Keyboards
import asyncio
from telegram.States import StatesBot

bot = Bot(Config.bot_token)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)
isActive = True


@dp.message_handler(commands=['start'], state=None)
async def start(message: types.Message):
    await bot.send_message(message.from_user.id, 'Made by FROFY', reply_markup=telegram.Keyboards.keyboard_main)


@dp.message_handler(Text(equals='üìä –ü—Ä–∏—Å–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç', ignore_case=True), state=None)
async def send_screenshot(message: types.Message):
    shot = pyautogui.screenshot()
    shot.save('shot.png')
    await bot.send_document(message.from_user.id, open('shot.png', 'rb'), caption='–¢–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω')


@dp.message_handler(Text(equals='üîΩ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', ignore_case=True), state=None)
async def main_menu(message: types.Message):
    await bot.send_message(message.from_user.id, 'Main Menu', reply_markup=telegram.Keyboards.keyboard_main)


@dp.message_handler(Text(equals='–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ', ignore_case=True), state=None)
async def main_menu(message: types.Message):
    await bot.send_message(message.from_user.id, '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', reply_markup=telegram.Keyboards.keyboard_add)


@dp.message_handler(Text(equals='üîÅ –°–ª–∏—Ç—å —Ñ–ª–µ—Ç—Ç—É', ignore_case=True), state=None)
async def main_menu(message: types.Message):
    Methods.Fletta()
    await bot.send_message(message.from_user.id, '–§–ª–µ—Ç—Ç–∞ —Å–ª–∏—Ç–∞')


@dp.message_handler(Text(equals='–°—Ç–∞—Ç—É—Å –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞', ignore_case=True), state=None)
async def main_menu(message: types.Message):
    shot = pyautogui.locateOnScreen('target.png', region=(850, 10, 240, 50), confidence=0.3)
    # shot = pyautogui.locateOnScreen('target.png', region=(850, 10, 240, 50), confidence=0.2)
    if shot is None:
        shot = 'None'

    await bot.send_message(message.from_user.id, shot)


@dp.message_handler(Text(equals='–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞', ignore_case=True), state=None)
async def main_menu(message: types.Message):
    isActive = False
    await bot.send_message(message.from_user.id, '–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')


@dp.message_handler(Text(equals='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞', ignore_case=True), state=None)
async def main_menu(message: types.Message):
    await bot.send_message(message.from_user.id, '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞', reply_markup=telegram.Keyboards.keyboard_bot)


@dp.message_handler(Text(equals='–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞', ignore_case=True), state=None)
async def main_menu(message: types.Message):
    await bot.send_message(message.from_user.id, '–ó–∞–ø—É—â–µ–Ω')
    while True:
        Methods.Fletta()
        # time.sleep(1)
        # Methods.Rocas()
        time.sleep(300)


"""@dp.message_handler(Text(equals='–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞', ignore_case=True), state=None)
async def main_menu(message: types.Message):
    await bot.send_message(message.from_user.id, '–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')
    while isActive:
        if not pyautogui.locateOnScreen('target.png', region=(850, 10, 240, 50), confidence=0.3):
            pyautogui.moveTo(x=415, y=1015, duration=0.1)
            pyautogui.mouseDown(button='right')
            pyautogui.mouseUp(button='right')
            pyautogui.moveTo(x=415, y=980, duration=0.1)
            pyautogui.mouseDown(button='right')
            pyautogui.mouseUp(button='right')
            pyautogui.moveTo(x=695, y=1015, duration=0.3)
            pyautogui.mouseDown(button='right')
            pyautogui.mouseUp(button='right')
            pyautogui.moveTo(x=730, y=1015, duration=0.3)
            pyautogui.mouseDown(button='right')
            pyautogui.mouseUp(button='right')
            await asyncio.sleep(3)
        else:
            await asyncio.sleep(1)
    await bot.send_message(message.from_user.id, '–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
"""

@dp.message_handler(Text(equals='–í–∫–ª—é—á–∏—Ç—å –¥—É—Ö–∏', ignore_case=True), state=None)
async def main_menu(message: types.Message):
    pyautogui.moveTo(x=695, y=980, duration=0.2)
    pyautogui.mouseDown(button='right')
    pyautogui.mouseUp(button='right')
    pyautogui.mouseDown(button='left', x=912, y=610, duration=0.5)
    pyautogui.mouseUp(button='left', x=912, y=610, duration=0.5)
    await asyncio.sleep(0.5)
    pyautogui.moveTo(x=730, y=986, duration=0.2)
    pyautogui.mouseDown(button='right')
    pyautogui.mouseUp(button='right')
    pyautogui.mouseDown(button='left', x=912, y=610, duration=0.5)
    pyautogui.mouseUp(button='left', x=912, y=610, duration=0.5)

    await bot.send_message(message.from_user.id, '–î—É—Ö–∏ –≤–∫–ª—é—á–µ–Ω—ã')

